# This is a basic workflow that is manually triggered

name: test-build-expo

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # strategy:
    #   # If any of the following matrix element fails, the whole workflow fails
    #   fail-fast: true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # optional setup your target directory, default would be root level
    defaults:
      run:
        working-directory: ./test-mobile-app
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # packages and dependencies (fill accordingly to your needs)
    - name: Checkout Repository
      uses: actions/checkout@v4 #https://github.com/actions/checkout
    - name: Setup Node  
      uses: actions/setup-node@v4 #https://github.com/actions/setup-node
      with:
        node-version: 18
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{secrets.TOKEN_EXPO}}
    # Installation
    # Trying to install dependecies from cache
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list
    - name: Install dependencies
      run: npm install
    - name: Setup EAS local builds
      run: npm i -g eas-cli-local-build-plugin
    # Test
    - name: Test
      run: echo "bypass npm run test"
    # Build
    - name: Build
      run: |
        eas build --local \
          --non-interactive \
          --output=./app-build \
          --platform=android \
          --profile=development
    # Upload the app binaries to the artifact section of the workflow
    # They can optionally be downloaded by the user later on or for example added to a release
    - name: Check artifact
      run: |
        ls -l
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: test-mobile-app
        path: app-build
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`